fof(initial_model, axiom, dom(num_0)  &  dom(num_1)  &  bin_count(num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0)). 
fof(qed3,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,num_1,num_1,num_1) =>  goal )).
fof(qed5,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed10,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed11,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed12,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed13,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed14,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed15,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed16,axiom, ![ A, B, C, D, E, F, G, H, I, J, K] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed17,axiom, ![ A, B, C, D, E, F, G, H, I, J] : (bin_count(A,B,C,D,E,F,G,H,I,J,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed18,axiom, ![ A, B, C, D, E, F, G, H, I] : (bin_count(A,B,C,D,E,F,G,H,I,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed19,axiom, ![ A, B, C, D, E, F, G, H] : (bin_count(A,B,C,D,E,F,G,H,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed20,axiom, ![ A, B, C, D, E, F, G] : (bin_count(A,B,C,D,E,F,G,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed21,axiom, ![ A, B, C, D, E, F] : (bin_count(A,B,C,D,E,F,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed22,axiom, ![ A, B, C, D, E] : (bin_count(A,B,C,D,E,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed23,axiom, ![ A, B, C, D] : (bin_count(A,B,C,D,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed24,axiom, ![ A, B, C] : (bin_count(A,B,C,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed25,axiom, ![ A, B] : (bin_count(A,B,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed26,axiom, ![ A] : (bin_count(A,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(qed27,axiom, (bin_count(num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) =>  goal )).
fof(p27,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,num_0) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,Z,num_1) )).
fof(p26,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,num_0,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,Y,num_1,num_0) )).
fof(p25,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,num_0,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,X,num_1,num_0,num_0) )).
fof(p24,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,num_0,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,W,num_1,num_0,num_0,num_0) )).
fof(p23,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,num_0,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,V,num_1,num_0,num_0,num_0,num_0) )).
fof(p22,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,num_0,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,U,num_1,num_0,num_0,num_0,num_0,num_0) )).
fof(p21,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,num_0,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,T,num_1,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p20,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,S,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p19,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,R,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p18,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,Q,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p17,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,P,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p16,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N, O] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,O,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p15,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M, N] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,N,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p14,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L, M] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,M,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p13,axiom, ![ A, B, C, D, E, F, G, H, I, J, K, L] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,L,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,L,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p12,axiom, ![ A, B, C, D, E, F, G, H, I, J, K] : (bin_count(A,B,C,D,E,F,G,H,I,J,K,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,K,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p11,axiom, ![ A, B, C, D, E, F, G, H, I, J] : (bin_count(A,B,C,D,E,F,G,H,I,J,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,J,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p10,axiom, ![ A, B, C, D, E, F, G, H, I] : (bin_count(A,B,C,D,E,F,G,H,I,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,I,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p9,axiom, ![ A, B, C, D, E, F, G, H] : (bin_count(A,B,C,D,E,F,G,H,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,H,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p8,axiom, ![ A, B, C, D, E, F, G] : (bin_count(A,B,C,D,E,F,G,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,G,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p7,axiom, ![ A, B, C, D, E, F] : (bin_count(A,B,C,D,E,F,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,F,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p6,axiom, ![ A, B, C, D, E] : (bin_count(A,B,C,D,E,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,E,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p5,axiom, ![ A, B, C, D] : (bin_count(A,B,C,D,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,D,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p4,axiom, ![ A, B, C] : (bin_count(A,B,C,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,C,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p3,axiom, ![ A, B] : (bin_count(A,B,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,B,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p2,axiom, ![ A] : (bin_count(A,num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(A,num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(p1,axiom, (bin_count(num_0,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1,num_1) => bin_count(num_1,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0,num_0) )).
fof(goal_to_be_proved,conjecture,( goal )).
